|router_reg
clock => dout[0]~reg0.CLK
clock => dout[1]~reg0.CLK
clock => dout[2]~reg0.CLK
clock => dout[3]~reg0.CLK
clock => dout[4]~reg0.CLK
clock => dout[5]~reg0.CLK
clock => dout[6]~reg0.CLK
clock => dout[7]~reg0.CLK
clock => err~reg0.CLK
clock => low_pkt_valid~reg0.CLK
clock => parity_done~reg0.CLK
clock => internal_parity_byte[0].CLK
clock => internal_parity_byte[1].CLK
clock => internal_parity_byte[2].CLK
clock => internal_parity_byte[3].CLK
clock => internal_parity_byte[4].CLK
clock => internal_parity_byte[5].CLK
clock => internal_parity_byte[6].CLK
clock => internal_parity_byte[7].CLK
clock => FFS_byte[0].CLK
clock => FFS_byte[1].CLK
clock => FFS_byte[2].CLK
clock => FFS_byte[3].CLK
clock => FFS_byte[4].CLK
clock => FFS_byte[5].CLK
clock => FFS_byte[6].CLK
clock => FFS_byte[7].CLK
resetn => parity_done.OUTPUTSELECT
resetn => low_pkt_valid.OUTPUTSELECT
resetn => err.OUTPUTSELECT
resetn => dout.OUTPUTSELECT
resetn => dout.OUTPUTSELECT
resetn => dout.OUTPUTSELECT
resetn => dout.OUTPUTSELECT
resetn => dout.OUTPUTSELECT
resetn => dout.OUTPUTSELECT
resetn => dout.OUTPUTSELECT
resetn => dout.OUTPUTSELECT
resetn => FFS_byte.OUTPUTSELECT
resetn => FFS_byte.OUTPUTSELECT
resetn => FFS_byte.OUTPUTSELECT
resetn => FFS_byte.OUTPUTSELECT
resetn => FFS_byte.OUTPUTSELECT
resetn => FFS_byte.OUTPUTSELECT
resetn => FFS_byte.OUTPUTSELECT
resetn => FFS_byte.OUTPUTSELECT
resetn => internal_parity_byte.OUTPUTSELECT
resetn => internal_parity_byte.OUTPUTSELECT
resetn => internal_parity_byte.OUTPUTSELECT
resetn => internal_parity_byte.OUTPUTSELECT
resetn => internal_parity_byte.OUTPUTSELECT
resetn => internal_parity_byte.OUTPUTSELECT
resetn => internal_parity_byte.OUTPUTSELECT
resetn => internal_parity_byte.OUTPUTSELECT
resetn => header_byte[0].ACLR
resetn => header_byte[1].ACLR
resetn => header_byte[2].ACLR
resetn => header_byte[3].ACLR
resetn => header_byte[4].ACLR
resetn => header_byte[5].ACLR
resetn => header_byte[6].ACLR
resetn => header_byte[7].ACLR
pkt_valid => always0.IN0
pkt_valid => always2.IN0
pkt_valid => ld_and_not_pkt_valid.IN0
data_in[0] => FFS_byte.DATAB
data_in[0] => internal_parity_byte.IN1
data_in[0] => Equal0.IN7
data_in[0] => dout.DATAB
data_in[0] => header_byte[0].DATAIN
data_in[1] => FFS_byte.DATAB
data_in[1] => internal_parity_byte.IN1
data_in[1] => Equal0.IN6
data_in[1] => dout.DATAB
data_in[1] => header_byte[1].DATAIN
data_in[2] => FFS_byte.DATAB
data_in[2] => internal_parity_byte.IN1
data_in[2] => Equal0.IN5
data_in[2] => dout.DATAB
data_in[2] => header_byte[2].DATAIN
data_in[3] => FFS_byte.DATAB
data_in[3] => internal_parity_byte.IN1
data_in[3] => Equal0.IN4
data_in[3] => dout.DATAB
data_in[3] => header_byte[3].DATAIN
data_in[4] => FFS_byte.DATAB
data_in[4] => internal_parity_byte.IN1
data_in[4] => Equal0.IN3
data_in[4] => dout.DATAB
data_in[4] => header_byte[4].DATAIN
data_in[5] => FFS_byte.DATAB
data_in[5] => internal_parity_byte.IN1
data_in[5] => Equal0.IN2
data_in[5] => dout.DATAB
data_in[5] => header_byte[5].DATAIN
data_in[6] => FFS_byte.DATAB
data_in[6] => internal_parity_byte.IN1
data_in[6] => Equal0.IN1
data_in[6] => dout.DATAB
data_in[6] => header_byte[6].DATAIN
data_in[7] => FFS_byte.DATAB
data_in[7] => internal_parity_byte.IN1
data_in[7] => Equal0.IN0
data_in[7] => dout.DATAB
data_in[7] => header_byte[7].DATAIN
fifo_full => always1.IN0
fifo_full => always4.IN1
fifo_full => always7.IN0
rst_int_reg => low_pkt_valid.OUTPUTSELECT
detect_add => always0.IN1
detect_add => parity_done.OUTPUTSELECT
ld_state => ld_and_not_pkt_valid.IN1
ld_state => always1.IN1
ld_state => always2.IN1
ld_state => always7.IN1
laf_state => always4.IN1
laf_state => dout.OUTPUTSELECT
laf_state => dout.OUTPUTSELECT
laf_state => dout.OUTPUTSELECT
laf_state => dout.OUTPUTSELECT
laf_state => dout.OUTPUTSELECT
laf_state => dout.OUTPUTSELECT
laf_state => dout.OUTPUTSELECT
laf_state => dout.OUTPUTSELECT
full_state => always2.IN1
lfd_state => internal_parity_byte.OUTPUTSELECT
lfd_state => internal_parity_byte.OUTPUTSELECT
lfd_state => internal_parity_byte.OUTPUTSELECT
lfd_state => internal_parity_byte.OUTPUTSELECT
lfd_state => internal_parity_byte.OUTPUTSELECT
lfd_state => internal_parity_byte.OUTPUTSELECT
lfd_state => internal_parity_byte.OUTPUTSELECT
lfd_state => internal_parity_byte.OUTPUTSELECT
lfd_state => dout.OUTPUTSELECT
lfd_state => dout.OUTPUTSELECT
lfd_state => dout.OUTPUTSELECT
lfd_state => dout.OUTPUTSELECT
lfd_state => dout.OUTPUTSELECT
lfd_state => dout.OUTPUTSELECT
lfd_state => dout.OUTPUTSELECT
lfd_state => dout.OUTPUTSELECT
parity_done <= parity_done~reg0.DB_MAX_OUTPUT_PORT_TYPE
low_pkt_valid <= low_pkt_valid~reg0.DB_MAX_OUTPUT_PORT_TYPE
err <= err~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[0] <= dout[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[1] <= dout[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[2] <= dout[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[3] <= dout[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[4] <= dout[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[5] <= dout[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[6] <= dout[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[7] <= dout[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


